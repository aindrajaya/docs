{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://sandbox.mintlify.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/plants": {
      "get": {
        "description": "Returns all plants from the system that the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new plant in the store",
        "requestBody": {
          "description": "Plant to add to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plant"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/plants/{id}": {
      "delete": {
        "description": "Deletes a single plant based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of plant to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plant deleted",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/match-info/{matchId}": {
      "get": {
        "summary": "Retrieve match information",
        "parameters": [
          {
            "name": "matchId",
            "in": "path",
            "required": true,
            "description": "ID of the match to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "A": {
                      "$ref": "#/components/schemas/Team"
                    },
                    "H": {
                      "$ref": "#/components/schemas/Team"
                    },
                    "S1": {
                      "type": "integer",
                      "description": "Score of the away team"
                    },
                    "S2": {
                      "type": "integer",
                      "description": "Score of the home team"
                    },
                    "St": {
                      "type": "integer",
                      "description": "Status of the match"
                    },
                    "W": {
                      "type": "integer",
                      "description": "Winner of the match (1 for away, 0 for draw, 2 for home)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Plant": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the plant",
            "type": "string"
          },
          "tag": {
            "description": "Tag to specify the type",
            "type": "string"
          }
        }
      },
      "NewPlant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plant"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the plant",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Team": {
        "type": "object",
        "properties": {
          "BL": {
            "type": "boolean",
            "description": "Blocked status of the team"
          },
          "I": {
            "type": "string",
            "description": "Team ID"
          },
          "IM": {
            "type": "string",
            "description": "Path to team logo image"
          },
          "M": {
            "type": "string",
            "description": "Team's logo identifier"
          },
          "P": {
            "type": "boolean",
            "description": "Placeholder status of the team"
          },
          "S": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "IM": {
                  "type": "string",
                  "description": "Image path of the team"
                },
                "M": {
                  "type": "string",
                  "description": "Logo identifier"
                },
                "T": {
                  "type": "string",
                  "description": "Name of the team"
                }
              }
            },
            "description": "Array of team details"
          },
          "SI": {
            "type": "integer",
            "description": "Status indicator of the team"
          },
          "T": {
            "type": "string",
            "description": "Team name"
          },
          "TP": {
            "type": "integer",
            "description": "Team points or ranking position"
          },
          "XI": {
            "type": "integer",
            "description": "Extended identifier of the team"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}